# Generated by Django 5.1.4 on 2025-01-10 15:04

import django.db.models.deletion
from django.db import migrations, models


def forward_func(apps, schema_editor):
    PendingPOItem = apps.get_model('purchasing', 'PendingPOItem')
    Brand = apps.get_model('inventory', 'Brand')
    
    # Create any missing brands first
    for item in PendingPOItem.objects.all():
        brand_name = item.brand.strip()
        Brand.objects.get_or_create(name=brand_name)
    
    # Now update the items with brand objects
    for item in PendingPOItem.objects.all():
        brand_name = item.brand.strip()
        brand = Brand.objects.get(name=brand_name)
        item.brand_new = brand
        item.save()

def reverse_func(apps, schema_editor):
    PendingPOItem = apps.get_model('purchasing', 'PendingPOItem')
    for item in PendingPOItem.objects.all():
        if item.brand_new:
            item.brand = item.brand_new.name
            item.save()

class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0011_pendingpoitem'),
        ('purchasing', '0027_pendingpoitem_is_processed'),
    ]

    operations = [
        # Add new brand field
        migrations.AddField(
            model_name='pendingpoitem',
            name='brand_new',
            field=models.ForeignKey(
                'inventory.Brand',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='purchasing_pending_items'
            ),
        ),
        
        # Convert data
        migrations.RunPython(forward_func, reverse_func),
        
        # Remove old brand field
        migrations.RemoveField(
            model_name='pendingpoitem',
            name='brand',
        ),
        
        # Rename new field to brand
        migrations.RenameField(
            model_name='pendingpoitem',
            old_name='brand_new',
            new_name='brand',
        ),
        
        # Make brand field required
        migrations.AlterField(
            model_name='pendingpoitem',
            name='brand',
            field=models.ForeignKey(
                'inventory.Brand',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='purchasing_pending_items'
            ),
        ),
    ]
